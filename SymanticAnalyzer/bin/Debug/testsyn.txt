unit LastTest;
# Final compiler project test program
   NO ERRORS INTENDED!  Notify A. Brouillette if errors are found. #

Label Exit;

VAR I,J: integer;
var product, sum: integer;
# GRAD ONLY:  we will only use index slots 1 through 5 below-- 0 based array, but want list[1] through list[5]
   var list: array [6] of integer;
#
begin
for i := 1 to 5 do
# Find summation 5 times #
  begin
  writeln("SUMMATIONS 1 THROUGH 5");
  sum := 0;
  for j := 1 to i do
    begin
    sum := sum + j
    end;
  #GRAD ONLY:  list[i] := sum; # 
  writeln(sum)
  end;

#GRAD ONLY:  
writeln("GRAD ARRAY:");
for i := 1 to 5 do
  writeln(list[i]);  
#

# Find 6 factorial #
  product := 1;
  i := 1;
  while i <= 6 do
    begin
    product := product * i;
    writeln("Product now is:");
    writeln(product);
    i := i + 1
    end;
  writeln("6! is:");
  writeln(product);

# count powers of 2 to get over 1000 #
j := 0;
product := 1;
repeat
  begin
  product := product * 2;
  j := j + 1
  end
until product > 1000;
writeln("Iterations = ");
writeln(j);
writeln("Value of product:");
writeln(product);

if product = 1024 then
  goto EXIT
else
  writeln("product is not 1024??");

EXIT: writeln("Made it to the exit.")

end.
